Etapas do pré-processamento:

Tratar valores ausentes.
Converter variáveis categóricas para numéricas (se necessário, com One-Hot Encoding).
Normalizar ou padronizar variáveis numéricas para modelos baseados em distância.
Dividir o conjunto de dados em treino e teste (geralmente 70/30 ou 80/20).
Exemplo de código para pré-processamento:
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline

# Tratar valores ausentes (exemplo: preencher com a mediana)
df.fillna(df.median(), inplace=True)

# Separar as features (X) e a variável alvo (y)
X = df.drop('target', axis=1)
y = df['target']

# Dividir em treino e teste
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Pipeline de pré-processamento
preprocessor = ColumnTransformer(
    transformers=[
        ('num', StandardScaler(), ['age', 'weight', 'cd4_count']),
        ('cat', OneHotEncoder(), ['gender', 'race'])
    ]
)

# Aplicar o pipeline
X_train = preprocessor.fit_transform(X_train)
X_test = preprocessor.transform(X_test)
